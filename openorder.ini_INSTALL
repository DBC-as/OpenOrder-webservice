; inifile for OpenOrder

[setup]

version = 0.1

; validate
;validate[soap_request] = soap.xsd
;validate[request] = openorder.xsd
;validate[ubf] = esgaroth_schemas/ubf.xsd
;validate[soap_response] = soap.xsd
;validate[response] = openorder.xsd

; soapActions and their corresponding request structure
; Can be found in the wsdl but is stated here for convenience
soapAction[checkOrderPolicy] = checkOrderPolicyRequest
soapAction[placeOrder] = placeOrderRequest

; prefixes and namespaces
xmlns[NONE] = http://oss.dbc.dk/ns/openorder

;Extend Service target
es_target = some_es_target
es_authentication = user/group/password
es_timeout = 30

; esgaroth script
esgaroth_wrapper = /var/www/php_exec/EsgarothShell

; path to temp-dir where writing/reading/deleting files are allowed
tmp_path = /tmp/

; path to xml-examples
xmldir = ./xml

; logfile for verbose output
logfile = /tmp/openorder.log

order_credentials = ora_user/ora_passwd@some.server.dk

; set verboselevel
;   WARNING - simple warnings
;   ERROR   - errors in response
;   FATAL   - major errors
;   STAT    - Statístical logging
;   TIMER   - timer logging
;   TRACE   - program trace
;   DEBUG   - debugging info
;   Z3959   - calls to z3950 services
;   OCI     - oracle
verbose = WARNING+ERROR+FATAL+STAT+TIMER+TRACE+DEBUG+Z3950+OCI

; format for automatic timer dump %s is the soap-action used
dump_timer = openorder(%s)

[aaa]
; aaa Authentication, Access control and Accounting
; if aaa_credentials is set, the rights-object is created from
; the FORS-server or aaa_ip_rights below
;
; oci credentials for FORS server
aaa_credentials = ora_user/ora_passwd@some.server.dk
; memcache server - use localhost in one-webserver environment
;aaa_cache_address = localhost:11211
; number of seconds to cache authentication and access rights info
;aaa_cache_seconds = 3600
;
; As an alternative to FORS rights, rights can be set here for selected ip-addresses
; aaa_ip_rights[group-identifier][ip_list] = list of ip's
; aaa_ip_rights[group-identifier][ressource][<named ressource>] = right to <named ressource>
; aaa_ip_rights[group-identifier][ressource][<named ressource 2>] = right to <named ressource 2>
;
aaa_ip_rights[dbc][ip_list] = 172.16.0.0-172.31.255.255;193.111.162.0-193.111.162.255
aaa_ip_rights[dbc][ressource][openorder] = 500

[rest]
; REST parameters for SOAPAction
;
; use xml.path.to.par notation to solve name-conflicts
; action[thisSoapAction][foo][] = some.number
; action[thisSoapAction][bar][] = another.number
; to build
; <thisSoapAction>
;   <foo>
;     <number>nn</number>
;   </foo>
;   <bar>
;     <number>mm</number>
;   </bar>
; </thisSoapAction>
; from url: action=thisSoapAction&some.number=nn&another.number=mm
;

action[checkOrderPolicy][] = bibliographicRecordId
action[checkOrderPolicy][] = pickUpAgencyId
action[checkOrderPolicy][] = serviceRequester
action[checkOrderPolicy][] = outputType
action[checkOrderPolicy][] = callback

;action[placeOrder][] = 

[howru]
;test[] = checkOrderPolicy&bibliographicRecordId=27670768&pickUpAgencyId=716301&serviceRequester=150013
;preg_match[] = orderPossible
;error[] = ERROR checkOrderPolicy for 716301

